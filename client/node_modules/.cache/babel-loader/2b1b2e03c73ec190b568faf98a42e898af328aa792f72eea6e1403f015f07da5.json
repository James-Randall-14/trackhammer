{"ast":null,"code":"var _jsxFileName = \"/home/james/code/trackhammer/client/src/components/queue/QueueItem.jsx\",\n  _s = $RefreshSig$();\nimport \"./Queue.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QueueItem({\n  url,\n  array\n}) {\n  _s();\n  // const track = \"Trackname\";\n  // const artist = \"Artist\";\n  // const duration = \"5:00\";\n\n  // Random identifier\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Define event handlers\n  function startDragging(e) {\n    setIsDragging(true);\n  }\n  function stopDragging(e) {\n    setIsDragging(false);\n  }\n  function handleDraggedOver(e) {}\n  function handleDrop(e) {}\n  function handleDragLeave(e) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    // Change the class name depending on drag state\n    className: isDragging ? \"Queue-Item-Dragged\" : \"Queue-Item\",\n    draggable: \"true\"\n    // Events when this item is being dragged\n    ,\n    onDragStart: startDragging,\n    onDragEnd: stopDragging\n    // Events when an item is dragged over this one\n    ,\n    onDragOver: handleDraggedOver,\n    onDrop: handleDrop,\n    onDragLeave: handleDragLeave,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n_s(QueueItem, \"VIDKbg2yfT0CLfTnlFHLO2Fjmb8=\");\n_c = QueueItem;\nvar _c;\n$RefreshReg$(_c, \"QueueItem\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","QueueItem","url","array","_s","isDragging","setIsDragging","startDragging","e","stopDragging","handleDraggedOver","handleDrop","handleDragLeave","className","draggable","onDragStart","onDragEnd","onDragOver","onDrop","onDragLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/james/code/trackhammer/client/src/components/queue/QueueItem.jsx"],"sourcesContent":["import \"./Queue.css\";\nimport { useState } from \"react\";\n\nexport default function QueueItem({ url, array }) {\n\t// const track = \"Trackname\";\n\t// const artist = \"Artist\";\n\t// const duration = \"5:00\";\n\n\t// Random identifier\n\n\tconst [isDragging, setIsDragging] = useState(false);\n\n\t// Define event handlers\n\tfunction startDragging(e) {\n\t\tsetIsDragging(true);\n\t}\n\n\tfunction stopDragging(e) {\n\t\tsetIsDragging(false);\n\t}\n\n\tfunction handleDraggedOver(e) {}\n\n\tfunction handleDrop(e) {}\n\n\tfunction handleDragLeave(e) {}\n\n\treturn (\n\t\t<div\n\t\t\t// Change the class name depending on drag state\n\t\t\tclassName={isDragging ? \"Queue-Item-Dragged\" : \"Queue-Item\"}\n\t\t\tdraggable=\"true\"\n\t\t\t// Events when this item is being dragged\n\t\t\tonDragStart={startDragging}\n\t\t\tonDragEnd={stopDragging}\n\t\t\t// Events when an item is dragged over this one\n\t\t\tonDragOver={handleDraggedOver}\n\t\t\tonDrop={handleDrop}\n\t\t\tonDragLeave={handleDragLeave}\n\t\t>\n\t\t\t<p>{url}</p>\n\t\t</div>\n\t);\n}\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,SAASA,CAAC;EAAEC,GAAG;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACjD;EACA;EACA;;EAEA;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,SAASS,aAAaA,CAACC,CAAC,EAAE;IACzBF,aAAa,CAAC,IAAI,CAAC;EACpB;EAEA,SAASG,YAAYA,CAACD,CAAC,EAAE;IACxBF,aAAa,CAAC,KAAK,CAAC;EACrB;EAEA,SAASI,iBAAiBA,CAACF,CAAC,EAAE,CAAC;EAE/B,SAASG,UAAUA,CAACH,CAAC,EAAE,CAAC;EAExB,SAASI,eAAeA,CAACJ,CAAC,EAAE,CAAC;EAE7B,oBACCR,OAAA;IACC;IACAa,SAAS,EAAER,UAAU,GAAG,oBAAoB,GAAG,YAAa;IAC5DS,SAAS,EAAC;IACV;IAAA;IACAC,WAAW,EAAER,aAAc;IAC3BS,SAAS,EAAEP;IACX;IAAA;IACAQ,UAAU,EAAEP,iBAAkB;IAC9BQ,MAAM,EAAEP,UAAW;IACnBQ,WAAW,EAAEP,eAAgB;IAAAQ,QAAA,eAE7BpB,OAAA;MAAAoB,QAAA,EAAIlB;IAAG;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAER;AAACpB,EAAA,CAxCuBH,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}