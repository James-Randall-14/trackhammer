{"ast":null,"code":"var _jsxFileName = \"/home/james/code/trackhammer/client/src/components/queue/Queue.jsx\",\n  _s = $RefreshSig$();\nimport \"./Queue.css\";\nimport { useRef, useState } from \"react\";\nimport { arrayMoveImmutable } from \"array-move\";\nimport QueueItem from \"./QueueItem.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Queue() {\n  _s();\n  const [queue, setQueue] = useState([\"Abracadabra\", \"Brand New Bitch\", \"Club Classics\", \"Depth Charge\", \"Everybody Wants to Rule the World\", \"FE!N\", \"Gagnam Style\", \"Harder Better Faster Stronger\", \"I FEEL LIKE DANCING\", \"Just What I Needed\", \"Karma\", \"LOSING IT\"]);\n\n  // Define a callback for QueueItems to call when they are moved\n  function moveItem(startIndex, endIndex) {\n    const newQueue = arrayMoveImmutable(queue, startIndex, endIndex);\n    console.log(newQueue);\n    setQueue(newQueue);\n  }\n\n  // auto-scroll state\n  const scrollSpeed = 20; // px per frame (tweak as needed)\n  const edgeThreshold = 60; // px from top/bottom to trigger\n  const listRef = useRef(null);\n\n  // Define a drag function for smoother drag scrolling\n  // If user is dragging within a certain margin of top or bottom, scroll smoothly\n  function handleDragOver(e) {\n    console.log(\"uhh\");\n    e.preventDefault();\n    const container = listRef.current;\n    if (!container) return;\n    const {\n      top,\n      bottom\n    } = container.getBoundingClientRect();\n    const y = e.clientY;\n\n    // if pointer is within `edgeThreshold` px of the top edge:\n    if (y < top + edgeThreshold) {\n      container.scrollBy({\n        top: -scrollSpeed,\n        behavior: \"auto\"\n      });\n    }\n    // if pointer is within `edgeThreshold` px of the bottom edge:\n    else if (y > bottom - edgeThreshold) {\n      container.scrollBy({\n        top: scrollSpeed,\n        behavior: \"auto\"\n      });\n    }\n    // otherwise, don’t scroll\n  }\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"Queue\",\n    ref: listRef,\n    onDragOver: handleDragOver,\n    children: queue.map((url, idx, array) => /*#__PURE__*/_jsxDEV(QueueItem, {\n      url: url,\n      thisIndex: idx,\n      moveCallback: moveItem\n    }, url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n_s(Queue, \"hRH50T6plswv0chS6teXCuEfsxc=\");\n_c = Queue;\nvar _c;\n$RefreshReg$(_c, \"Queue\");","map":{"version":3,"names":["useRef","useState","arrayMoveImmutable","QueueItem","jsxDEV","_jsxDEV","Queue","_s","queue","setQueue","moveItem","startIndex","endIndex","newQueue","console","log","scrollSpeed","edgeThreshold","listRef","handleDragOver","e","preventDefault","container","current","top","bottom","getBoundingClientRect","y","clientY","scrollBy","behavior","className","ref","onDragOver","children","map","url","idx","array","thisIndex","moveCallback","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/james/code/trackhammer/client/src/components/queue/Queue.jsx"],"sourcesContent":["import \"./Queue.css\";\nimport { useRef, useState } from \"react\";\nimport { arrayMoveImmutable } from \"array-move\";\n\nimport QueueItem from \"./QueueItem.jsx\";\n\nexport default function Queue() {\n\tconst [queue, setQueue] = useState([\n\t\t\"Abracadabra\",\n\t\t\"Brand New Bitch\",\n\t\t\"Club Classics\",\n\t\t\"Depth Charge\",\n\t\t\"Everybody Wants to Rule the World\",\n\t\t\"FE!N\",\n\t\t\"Gagnam Style\",\n\t\t\"Harder Better Faster Stronger\",\n\t\t\"I FEEL LIKE DANCING\",\n\t\t\"Just What I Needed\",\n\t\t\"Karma\",\n\t\t\"LOSING IT\",\n\t]);\n\n\t// Define a callback for QueueItems to call when they are moved\n\tfunction moveItem(startIndex, endIndex) {\n\t\tconst newQueue = arrayMoveImmutable(queue, startIndex, endIndex);\n\t\tconsole.log(newQueue);\n\t\tsetQueue(newQueue);\n\t}\n\n\t// auto-scroll state\n\tconst scrollSpeed = 20; // px per frame (tweak as needed)\n\tconst edgeThreshold = 60; // px from top/bottom to trigger\n\tconst listRef = useRef(null);\n\n\t// Define a drag function for smoother drag scrolling\n\t// If user is dragging within a certain margin of top or bottom, scroll smoothly\n\tfunction handleDragOver(e) {\n\t\tconsole.log(\"uhh\");\n\n\t\te.preventDefault();\n\n\t\tconst container = listRef.current;\n\t\tif (!container) return;\n\n\t\tconst { top, bottom } = container.getBoundingClientRect();\n\t\tconst y = e.clientY;\n\n\t\t// if pointer is within `edgeThreshold` px of the top edge:\n\t\tif (y < top + edgeThreshold) {\n\t\t\tcontainer.scrollBy({ top: -scrollSpeed, behavior: \"auto\" });\n\t\t}\n\t\t// if pointer is within `edgeThreshold` px of the bottom edge:\n\t\telse if (y > bottom - edgeThreshold) {\n\t\t\tcontainer.scrollBy({ top: scrollSpeed, behavior: \"auto\" });\n\t\t}\n\t\t// otherwise, don’t scroll\n\t}\n\n\treturn (\n\t\t<ol className=\"Queue\" ref={listRef} onDragOver={handleDragOver}>\n\t\t\t{/* Iterate through list and generate QueueItems with unique keys */}\n\t\t\t{queue.map((url, idx, array) => (\n\t\t\t\t<QueueItem\n\t\t\t\t\tkey={url}\n\t\t\t\t\turl={url}\n\t\t\t\t\tthisIndex={idx}\n\t\t\t\t\tmoveCallback={moveItem}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ol>\n\t);\n}\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,kBAAkB,QAAQ,YAAY;AAE/C,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAClC,aAAa,EACb,iBAAiB,EACjB,eAAe,EACf,cAAc,EACd,mCAAmC,EACnC,MAAM,EACN,cAAc,EACd,+BAA+B,EAC/B,qBAAqB,EACrB,oBAAoB,EACpB,OAAO,EACP,WAAW,CACX,CAAC;;EAEF;EACA,SAASS,QAAQA,CAACC,UAAU,EAAEC,QAAQ,EAAE;IACvC,MAAMC,QAAQ,GAAGX,kBAAkB,CAACM,KAAK,EAAEG,UAAU,EAAEC,QAAQ,CAAC;IAChEE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBJ,QAAQ,CAACI,QAAQ,CAAC;EACnB;;EAEA;EACA,MAAMG,WAAW,GAAG,EAAE,CAAC,CAAC;EACxB,MAAMC,aAAa,GAAG,EAAE,CAAC,CAAC;EAC1B,MAAMC,OAAO,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACA;EACA,SAASmB,cAAcA,CAACC,CAAC,EAAE;IAC1BN,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAElBK,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAGJ,OAAO,CAACK,OAAO;IACjC,IAAI,CAACD,SAAS,EAAE;IAEhB,MAAM;MAAEE,GAAG;MAAEC;IAAO,CAAC,GAAGH,SAAS,CAACI,qBAAqB,CAAC,CAAC;IACzD,MAAMC,CAAC,GAAGP,CAAC,CAACQ,OAAO;;IAEnB;IACA,IAAID,CAAC,GAAGH,GAAG,GAAGP,aAAa,EAAE;MAC5BK,SAAS,CAACO,QAAQ,CAAC;QAAEL,GAAG,EAAE,CAACR,WAAW;QAAEc,QAAQ,EAAE;MAAO,CAAC,CAAC;IAC5D;IACA;IAAA,KACK,IAAIH,CAAC,GAAGF,MAAM,GAAGR,aAAa,EAAE;MACpCK,SAAS,CAACO,QAAQ,CAAC;QAAEL,GAAG,EAAER,WAAW;QAAEc,QAAQ,EAAE;MAAO,CAAC,CAAC;IAC3D;IACA;EACD;EAEA,oBACCzB,OAAA;IAAI0B,SAAS,EAAC,OAAO;IAACC,GAAG,EAAEd,OAAQ;IAACe,UAAU,EAAEd,cAAe;IAAAe,QAAA,EAE7D1B,KAAK,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,kBAC1BjC,OAAA,CAACF,SAAS;MAETiC,GAAG,EAAEA,GAAI;MACTG,SAAS,EAAEF,GAAI;MACfG,YAAY,EAAE9B;IAAS,GAHlB0B,GAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIR,CACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEP;AAACrC,EAAA,CAjEuBD,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}