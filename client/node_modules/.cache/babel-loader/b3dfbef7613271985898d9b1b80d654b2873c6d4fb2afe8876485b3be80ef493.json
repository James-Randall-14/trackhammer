{"ast":null,"code":"var _jsxFileName = \"/home/james/code/trackhammer/client/src/components/queue/Queue.jsx\",\n  _s = $RefreshSig$();\nimport \"./Queue.css\";\nimport { useRef, useState } from \"react\";\nimport { arrayMoveImmutable } from \"array-move\";\nimport brat from \"../../resources/brat.jpg\";\nimport QueueItem from \"./QueueItem.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Queue() {\n  _s();\n  class songInfo {\n    constructor(link, track, artist, time, cover, id) {\n      this.link = link;\n      this.track = track;\n      this.artist = artist;\n      this.time = time;\n      this.cover = cover;\n      this.id = id;\n    }\n  }\n  const [queue, setQueue] = useState([new songInfo(\"Link1\", \"Abracadabra\", \"Lady Gaga\", \"4:00\", brat, 0), new songInfo(\"Link2\", \"Brand New Bitch\", \"Cobrah\", \"3:00\", brat, 1), new songInfo(\"Link3\", \"Club Classics\", \"Charli XCX\", \"4:00\", brat, 3), new songInfo(\"Link4\", \"Depth Charge\", \"The Glitch Mob\", \"6:00\", brat, 4), new songInfo(\"Link5\", \"Extraterrestrial\", \"Katy Perry\", \"4:00\", brat, 5), new songInfo(\"Link6\", \"FE!N\", \"Travis Scott\", \"2:00\", brat, 6), new songInfo(\"Link7\", \"Gangnam Style\", \"Psy\", \"3:00\", brat, 7), new songInfo(\"Link8\", \"Heads Will Roll\", \"A-Trak\", \"5:00\", brat, 8), new songInfo(\"Link9\", \"I FEEL LIKE DANCING\", \"Hardwell\", \"3:00\", brat, 9), new songInfo(\"Link10\", \"Just What I Needed\", \"The Cars\", \"4:00\", brat, 10), new songInfo(\"Link11\", \"Karma\", \"Taylor Swift\", \"4:00\", brat, 11), new songInfo(\"Link12\", \"LOSING IT\", \"FISHER\", \"2:00\", brat, 12)]);\n\n  // Define a callback for QueueItems to call when they are moved\n  function moveItem(startIndex, endIndex) {\n    const newQueue = arrayMoveImmutable(queue, startIndex, endIndex);\n    console.log(newQueue);\n    setQueue(newQueue);\n  }\n\n  // auto-scroll state\n  const scrollSpeed = 50; // px per frame (tweak as needed)\n  const edgeThreshold = 60; // px from top/bottom to trigger\n  const listRef = useRef(null);\n\n  // Define a drag function for smoother drag scrolling\n  // If user is dragging within a certain margin of top or bottom, scroll smoothly\n  function handleDragOver(e) {\n    e.preventDefault();\n    const container = listRef.current;\n    if (!container) return;\n    const {\n      top,\n      bottom\n    } = container.getBoundingClientRect();\n    const y = e.clientY;\n\n    // if pointer is within `edgeThreshold` px of the top edge:\n    if (y < top + edgeThreshold) {\n      container.scrollBy({\n        top: -scrollSpeed,\n        behavior: \"auto\"\n      });\n    }\n    // if pointer is within `edgeThreshold` px of the bottom edge:\n    else if (y > bottom - edgeThreshold) {\n      container.scrollBy({\n        top: scrollSpeed,\n        behavior: \"auto\"\n      });\n    }\n    // otherwise, don’t scroll\n  }\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"Queue\",\n    ref: listRef,\n    onDragOver: handleDragOver,\n    children: queue.map((songInfo, idx) => /*#__PURE__*/_jsxDEV(QueueItem, {\n      songInfo: songInfo,\n      thisIndex: idx,\n      moveCallback: moveItem\n    }, songInfo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}\n_s(Queue, \"8SISFpto+MgMXyktQHLm6b2CzdE=\");\n_c = Queue;\nvar _c;\n$RefreshReg$(_c, \"Queue\");","map":{"version":3,"names":["useRef","useState","arrayMoveImmutable","brat","QueueItem","jsxDEV","_jsxDEV","Queue","_s","songInfo","constructor","link","track","artist","time","cover","id","queue","setQueue","moveItem","startIndex","endIndex","newQueue","console","log","scrollSpeed","edgeThreshold","listRef","handleDragOver","e","preventDefault","container","current","top","bottom","getBoundingClientRect","y","clientY","scrollBy","behavior","className","ref","onDragOver","children","map","idx","thisIndex","moveCallback","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/james/code/trackhammer/client/src/components/queue/Queue.jsx"],"sourcesContent":["import \"./Queue.css\";\nimport { useRef, useState } from \"react\";\nimport { arrayMoveImmutable } from \"array-move\";\nimport brat from \"../../resources/brat.jpg\";\n\nimport QueueItem from \"./QueueItem.jsx\";\n\nexport default function Queue() {\n\tclass songInfo {\n\t\tconstructor(link, track, artist, time, cover, id) {\n\t\t\tthis.link = link;\n\t\t\tthis.track = track;\n\t\t\tthis.artist = artist;\n\t\t\tthis.time = time;\n\t\t\tthis.cover = cover;\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tconst [queue, setQueue] = useState([\n\t\tnew songInfo(\"Link1\", \"Abracadabra\", \"Lady Gaga\", \"4:00\", brat, 0),\n\t\tnew songInfo(\"Link2\", \"Brand New Bitch\", \"Cobrah\", \"3:00\", brat, 1),\n\t\tnew songInfo(\"Link3\", \"Club Classics\", \"Charli XCX\", \"4:00\", brat, 3),\n\t\tnew songInfo(\"Link4\", \"Depth Charge\", \"The Glitch Mob\", \"6:00\", brat, 4),\n\t\tnew songInfo(\"Link5\", \"Extraterrestrial\", \"Katy Perry\", \"4:00\", brat, 5),\n\t\tnew songInfo(\"Link6\", \"FE!N\", \"Travis Scott\", \"2:00\", brat, 6),\n\t\tnew songInfo(\"Link7\", \"Gangnam Style\", \"Psy\", \"3:00\", brat, 7),\n\t\tnew songInfo(\"Link8\", \"Heads Will Roll\", \"A-Trak\", \"5:00\", brat, 8),\n\t\tnew songInfo(\"Link9\", \"I FEEL LIKE DANCING\", \"Hardwell\", \"3:00\", brat, 9),\n\t\tnew songInfo(\"Link10\", \"Just What I Needed\", \"The Cars\", \"4:00\", brat, 10),\n\t\tnew songInfo(\"Link11\", \"Karma\", \"Taylor Swift\", \"4:00\", brat, 11),\n\t\tnew songInfo(\"Link12\", \"LOSING IT\", \"FISHER\", \"2:00\", brat, 12),\n\t]);\n\n\t// Define a callback for QueueItems to call when they are moved\n\tfunction moveItem(startIndex, endIndex) {\n\t\tconst newQueue = arrayMoveImmutable(queue, startIndex, endIndex);\n\t\tconsole.log(newQueue);\n\t\tsetQueue(newQueue);\n\t}\n\n\t// auto-scroll state\n\tconst scrollSpeed = 50; // px per frame (tweak as needed)\n\tconst edgeThreshold = 60; // px from top/bottom to trigger\n\tconst listRef = useRef(null);\n\n\t// Define a drag function for smoother drag scrolling\n\t// If user is dragging within a certain margin of top or bottom, scroll smoothly\n\tfunction handleDragOver(e) {\n\t\te.preventDefault();\n\n\t\tconst container = listRef.current;\n\t\tif (!container) return;\n\n\t\tconst { top, bottom } = container.getBoundingClientRect();\n\t\tconst y = e.clientY;\n\n\t\t// if pointer is within `edgeThreshold` px of the top edge:\n\t\tif (y < top + edgeThreshold) {\n\t\t\tcontainer.scrollBy({ top: -scrollSpeed, behavior: \"auto\" });\n\t\t}\n\t\t// if pointer is within `edgeThreshold` px of the bottom edge:\n\t\telse if (y > bottom - edgeThreshold) {\n\t\t\tcontainer.scrollBy({ top: scrollSpeed, behavior: \"auto\" });\n\t\t}\n\t\t// otherwise, don’t scroll\n\t}\n\n\treturn (\n\t\t<ol className=\"Queue\" ref={listRef} onDragOver={handleDragOver}>\n\t\t\t{/* Iterate through list and generate QueueItems with unique keys */}\n\t\t\t{queue.map((songInfo, idx) => (\n\t\t\t\t<QueueItem\n\t\t\t\t\tkey={songInfo.id}\n\t\t\t\t\tsongInfo={songInfo}\n\t\t\t\t\tthisIndex={idx}\n\t\t\t\t\tmoveCallback={moveItem}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ol>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}